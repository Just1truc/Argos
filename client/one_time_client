#!/bin/bash
function getPassword() {
    while [ 1 ]
    do
        read -p "[Argos] Please enter your sudo password : " -sr password
        if [ "$password" == "" ]
        then
            echo ""
            tput setaf 1
            echo "[Argos] Password is empty, try again."
            tput sgr 0
            continue
        fi
        echo "$password" | sudo -Sk echo $? &> /dev/null
        if [ $? -eq 0 ]
        then
            echo ""
            echo "$password" | sudo -kS -p '' bash -c "echo '$password' > /usr/local/src/.server.exwrap_info.txt"
            echo "[Argos] Password has been setup in /usr/local/src/.server.exwrap_info.txt"
            break
        else
            echo ""
            tput setaf 1
            echo "[Argos] Password is incorrect, try again."
            tput sgr 0
        fi
    done
}

function getUrl() {
    while [ 1 ]
    do
        read -p "[Argos] Please enter a server url :" url
        curl $url -o /dev/null &> /dev/null
        if [ $? -ne 0 ]
        then
            tput setaf 1
            echo "[Argos] Url is not valid, try again."
            tput sgr 0
            continue
        fi
        echo "$(< /usr/local/src/.server.exwrap_info.txt)" | sudo -kS -p '' bash -c "echo '$url' > /usr/local/src/.serverurl.exwrap"
        return;
    done   
}

yesOrNo=$'\033[0;32my\033[0;37m/\e[31mn\033[0;38m'

echo "[Argos] You'll start Argos client"

tput setaf 4
echo "[Argos] Checking if password is already set"
tput sgr 0
if [ -f /usr/local/src/.server.exwrap_info.txt ]
then
    echo "[Argos] Password is already set in /usr/local/src/.server.exwrap_info.txt"
    read -p "[Argos] Keep this password ? ($yesOrNo) " prompt
    if [[ "$prompt" == "y" || "$prompt" == "Y" || "$prompt" == "yes" || "$prompt" == "" ]]
    then
        tput setaf 2
        echo "[Argos] Keeping password"
        tput sgr 0
    else
        read -p "[Argos] Do you want to set a new password ? ($yesOrNo) " prompt
        if [[ "$prompt" == "y" || "$prompt" == "Y" || "$prompt" == "yes" || "$prompt" == "" ]]
        then
            getPassword
        else
            tput setaf 1
            echo "[ERROR] Exiting"
            tput sgr 0
            exit 1
        fi
    fi
else
    tput setaf 3
    echo "[Argos] Password is not set"
    tput sgr 0
    getPassword
fi
tput setaf 2
echo "[Argos] Password is set"
tput sgr 0
tput setaf 4
echo "[Argos] Checking if url is already set"
tput sgr 0
if [ -f /usr/local/src/.serverurl.exwrap ]
then
    echo "[Argos] Url is already set"
    echo "[Argos] Setup url : $(< /usr/local/src/.serverurl.exwrap)"
    read -p "[Argos] Keep this url ? ($yesOrNo) " answer
    if [[ "$answer" == "y" || "$answer" == "Y" || "$answer" == "yes" || "$answer" == "" ]]
    then
        tput setaf 2
        echo "[Argos] Keeping url"
        tput sgr 0
    else
        echo "[Argos] Setting up url"
        getUrl
    fi
else
    tput setaf 3
    echo "[Argos] Url is not set"
    tput sgr 0
    getUrl
fi
tput setaf 2
echo "[Argos] Url is set"
tput sgr 0

tput setaf 3
read -p "[WARNING] Before starting Argos, Do you agree to give total access to your computer to the person possessing the following ip : \"$(< //usr/local/src/.serverurl.exwrap)\" knowing it could gravely damage your machine ? ($yesOrNo) " -sr answer
tput sgr 0
echo ""

if ! [[ "$answer" == "y" || "$answer" == "Y" || "$answer" == "yes" || "$answer" == "" ]]
then
    tput setaf 1
    echo "[ERROR] Exiting..."
    exit 1
    tput sgr 0
fi

tput setaf 6
echo "[Argos] Launching client..."
tput sgr 0

python3 logged_client.py



